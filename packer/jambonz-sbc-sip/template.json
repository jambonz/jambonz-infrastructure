{
  "variables": {
    "region": "us-east-1",
    "ssh_username": "admin",
    "ami_description": "jambonz SBC SIP", 
    "instance_type": "t2.medium",
    "drachtio_version": "v0.8.13-rc1",
    "jambonz_version": "v0.6.7-rc8",
    "install_datadog": "no",
    "datadog_key" : "",
    "install_telegraf": "yes"
  },
  "builders": [{
    "type": "amazon-ebs",
    "region": "{{user `region`}}",
    "source_ami_filter": {
      "filters": {
        "virtualization-type": "hvm",
        "name": "debian-10-amd64-*",
        "root-device-type": "ebs"
      },
      "owners": ["136693071363"],
      "most_recent": true
    },
    "instance_type": "{{user `instance_type`}}",
    "ssh_username": "{{user `ssh_username`}}",
    "ami_name": "jambonz-sbc-sip-{{user `jambonz_version`}}-{{isotime |clean_resource_name }}",
    "ami_description": "{{user `ami_description`}}",
    "launch_block_device_mappings": [
      {
        "device_name": "/dev/xvda",
        "volume_size": 60,
        "volume_type": "gp2",
        "delete_on_termination": true
      }
    ],
    "security_group_filter": {
      "filters": {
        "tag:Class": "packer"
      }
    },
    "tags": {
      "Name": "jambonz-sbc-sip"
    },
    "run_tags": {
      "Name": "jambonz-sbc-sip-build"
    }
  }],
  "provisioners": [
    {
      "type": "shell",
      "inline": [
        "while [ ! -f /var/lib/cloud/instance/boot-finished ]; do echo 'Waiting for cloud-init...'; sleep 1; done",
        "sudo apt-get update",
        "sudo apt-get -y install python gcc g++ make cmake build-essential git autoconf automake default-mysql-client redis-tools \\",
        "jq curl telnet libtool libtool-bin libssl-dev libcurl4-openssl-dev libz-dev systemd-coredump liblz4-tool \\",
        "iptables-dev libavformat-dev liblua5.1-0-dev libavfilter-dev libavcodec-dev libswresample-dev \\",
        "libevent-dev libpcap-dev libxmlrpc-core-c3-dev markdown libjson-glib-dev lsb-release \\",
        "libhiredis-dev gperf libspandsp-dev default-libmysqlclient-dev htop dnsutils gdb libtcmalloc-minimal4 \\",
        "gnupg2 wget pkg-config ca-certificates libjpeg-dev libsqlite3-dev libpcre3-dev libldns-dev \\",
        "libspeex-dev libspeexdsp-dev libedit-dev libtiff-dev yasm valgrind libswscale-dev haveged \\",
        "libopus-dev libsndfile-dev libshout3-dev libmpg123-dev libmp3lame-dev libopusfile-dev fail2ban",
        "sudo chmod a+w /usr/local/src",
        "ssh-keyscan github.com >> ~/.ssh/known_hosts",
        "mkdir ~/apps",
        "cd ~/apps",
        "git clone https://github.com/jambonz/sbc-options-handler.git",
        "git clone https://github.com/jambonz/sbc-outbound.git -b {{user `jambonz_version`}}",
        "git clone https://github.com/jambonz/sbc-inbound.git -b {{user `jambonz_version`}}",
        "git clone https://github.com/jambonz/sbc-registrar.git -b {{user `jambonz_version`}}",
        "git clone https://github.com/jambonz/jambonz-smpp-esme.git -b {{user `jambonz_version`}}",
        "git clone https://github.com/jambonz/sbc-call-router.git"
      ]
    },
    {
      "type": "file",
      "source": "files/",
      "destination": "/tmp"
    },
    {
      "type": "shell",
      "execute_command": "chmod +x {{ .Path }}; sudo '{{ .Path }}' {{build `ID`}}",
      "script": "scripts/install_apiban.sh"
    },
    {
      "type": "shell",
      "script": "scripts/install_chrony.sh"
    },
    {
      "type": "shell",
      "environment_vars": [
        "DD_KEY={{user `datadog_key`}}",
        "DD_INSTALL={{user `install_datadog`}}"
      ],
      "execute_command": "chmod +x {{ .Path }}; sudo '{{ .Path }}'",
      "script": "scripts/install_datadog.sh"
    },
    {
      "type": "shell",
      "execute_command": "chmod +x {{ .Path }}; sudo '{{ .Path }}' {{user `install_telegraf`}}",
      "script": "scripts/install_telegraf.sh"
    },
    {
      "type": "shell",
      "script": "scripts/install_nodejs.sh"
    },
    {
      "type": "shell",
      "execute_command": "chmod +x {{ .Path }}; sudo '{{ .Path }}' {{user `drachtio_version`}}",
      "script": "scripts/install_drachtio.sh"
    },
    {
      "type": "shell",
      "execute_command": "chmod +x {{ .Path }}; sudo '{{ .Path }}' {{user `jambonz_version`}}",
      "script": "scripts/install_app.sh"
    },
    {
      "type": "shell",
      "script": "scripts/install_fail2ban.sh"
    }
  ]
}
